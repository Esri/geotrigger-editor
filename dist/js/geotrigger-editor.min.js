/*! geotrigger-editor 2013-09-03 */
GeotriggerEditor.module("API",function(a,b){a.addInitializer(function(){this.session=new Geotriggers.Session({clientId:b.Config.session.clientId,clientSecret:b.Config.session.clientSecret,persistSession:!1})})}),GeotriggerEditor.module("Config",function(a){var b={showArea:!1,shapeOptions:{stroke:!0,color:"#00b1dc",weight:2,opacity:.8,fill:!0,fillColor:null,fillOpacity:.2,clickable:!0}};_.extend(a,{Map:{basemap:"Streets",center:[45.516484,-122.676339],zoom:12},imagePath:"/images",polygonOptions:b,circleOptions:b,drivetimeOptions:{icon:L.icon({iconUrl:"img/blue-dot.png",iconRetinaUrl:"img/blue-dot@2x.png",iconSize:[12,12],iconAnchor:[6,6],popupAnchor:[0,0],shadowUrl:null,shadowRetinaUrl:null,shadowSize:[0,0],shadowAnchor:[0,0]})},session:{clientId:"rcMNAPBoIn2M1JoI",clientSecret:"77edd9c16dde46ad9a93b79c83229887"}})}),GeotriggerEditor.module("Map.Draw",function(a,b,c,d,e,f){this.startWithParent=!1,f.extend(a,{editLayer:null,tools:{polygon:null,radius:null},_eventBindings:function(){b.vent.on("map:draw:tool:enable",this.enableTool,this),b.vent.on("trigger:new",function(a){a&&(this.editTrigger(a),b.vent.trigger("controls:tools:disable-draw"))},this),b.vent.on("trigger:create trigger:update trigger:new:cancel",function(){this.clear()},this),b.vent.on("trigger:edit",function(a){this.clearShape(a),this.editTrigger(a),b.Map.zoomToLayer(a)},this),b.map.on("draw:created",function(a){a.layerType;var c=a.layer;b.vent.trigger("trigger:new",c)})},editTrigger:function(a){this.clear(),a.editing.enable(),this.editLayer.addLayer(a)},polygon:function(a,c){return polygon=new L.GeoJSON(a,{style:function(){return b.Config.polygonOptions.shapeOptions}}),polygon.addTo(b.map),polygon.triggerId=c,polygon.on("click",function(a){console.log(a.target.triggerId)}),polygon},radius:function(a,c){var d=L.circle([a.latitude,a.longitude],a.distance,b.Config.circleOptions.shapeOptions);return d.addTo(b.map),d.triggerId=c,d.on("click",function(a){console.log(a.target.triggerId)}),d},clearShape:function(a){b.map.removeLayer(a)},clear:function(){this.editLayer.clearLayers()},enableTool:function(a){this.disableTool(),this.tools[a].enable()},disableTool:function(a){for(var b in this.tools)("undefined"==typeof a||b===a)&&this.tools[b].disable()}}),a.addInitializer(function(){this.editLayer=new L.FeatureGroup,b.map.addLayer(this.editLayer),this.tools.polygon=new L.Draw.Polygon(b.map,b.Config.polygonOptions),this.tools.radius=new L.Draw.Circle(b.map,b.Config.circleOptions),this._eventBindings()})}),GeotriggerEditor.module("Editor",function(a,b,c,d,e,f){a.Router=d.AppRouter.extend({appRoutes:{}});var g=function(){this.triggerCollection=new b.Collections.Triggers,this.notificationCollection=new b.Collections.Notifications};f.extend(g.prototype,{start:function(){this.showMap(),this.showControls(),this.setupDrawers(this.triggerCollection),this.setupNotifications(),this.triggerCollection.fetch({reset:!0}),b.vent.on("trigger:create",this.createTrigger,this),b.vent.on("trigger:update",this.updateTrigger,this)},showMap:function(){var a=new b.Views.Map;b.mapRegion.show(a)},showControls:function(){b.Editor.Controller.controlsView=new b.Views.Controls,b.controlsRegion.show(b.Editor.Controller.controlsView)},setupDrawers:function(a){this.drawerLayout=new b.Layouts.Drawer;var c=new b.Views.List({collection:a});b.listDrawerRegion.show(this.drawerLayout),this.drawerLayout.listRegion.show(c),b.vent.trigger("controls:list:toggle")},setupNotifications:function(){var a=new b.Views.NotificationList({collection:this.notificationCollection});b.notificationsRegion.show(a),b.vent.on("notifications:new",function(a){var c=new b.Models.Notification(a);this.notificationCollection.add(c)},this)},createTrigger:function(a){this.triggerCollection.create(a)},updateTrigger:function(a){var b=this.triggerCollection.get(a.triggerId);b.set(a),b.save()}}),a.addInitializer(function(){a.Controller=new g,new a.Router({controller:a.Controller}),a.Controller.start()})}),GeotriggerEditor.module("Map",function(a,b,c,d,e,f){this.startWithParent=!1,f.extend(a,{zoomToLayer:function(a){b.map.fitBounds(a.getBounds(),{paddingTopLeft:[b.listDrawerRegion.$el.width(),0]})}}),a.addInitializer(function(a){var c=a.el;b.map=L.map(c).setView(b.Config.Map.center,b.Config.Map.zoom),b.map.zoomControl.setPosition("topright"),L.esri.basemapLayer(b.Config.Map.basemap).addTo(b.map),this.Draw.start()})}),GeotriggerEditor.module("Models",function(a,b,c){a.Notification=c.Model.extend({defaults:{type:"info",message:"everything's fine"}})}),GeotriggerEditor.module("Models",function(a,b,c){a.Trigger=c.Model.extend({idAttribute:"triggerId",sync:function(a,c,d){function e(a,b){a?d&&d.error&&d.error("Record Not Found"):d&&d.success&&d.success(b)}console.log("sync:"+a);var f=this.get("triggerId");switch(a){case"read":b.API.session.request("trigger/list",{params:{triggerIds:[f]},callback:e});break;case"create":b.API.session.request("trigger/create",{params:c.toJSON(),callback:e});break;case"update":b.API.session.request("trigger/update",{params:{triggerIds:f,condition:this.get("condition"),action:this.get("action"),setTags:this.get("tags")},callback:e});break;case"delete":b.API.session.request("trigger/delete",{params:{triggerIds:f},callback:e})}}})}),GeotriggerEditor.module("Collections",function(a,b,c){a.Notifications=c.Collection.extend({model:b.Models.Notification})}),GeotriggerEditor.module("Collections",function(a,b,c,d,e,f){a.Triggers=c.Collection.extend({model:b.Models.Trigger,fetch:function(a){b.API.session.request("trigger/list",{callback:f.bind(function(b,c){a.reset?this.reset(this.parse(c)):this.set(this.parse(c))},this)})},parse:function(a){return a.triggers}})}),GeotriggerEditor.module("Layouts",function(a,b,c){a.Drawer=c.Marionette.Layout.extend({template:b.Templates["drawer-list"],className:"gt-panel-wrap",events:{"click .gt-back-to-list":"backToList","click .gt-close-drawer":"closeDrawer"},regions:{listRegion:".gt-panel-list",editRegion:".gt-panel-edit"},initialize:function(){this.listenTo(b.vent,"drawer:list:toggle",this.toggleDrawer),this.listenTo(b.vent,"drawer:list:reset-buttons",this.resetButtons),this.listenTo(b.vent,"drawer:close",this.closeDrawer)},toggleDrawer:function(){this.resetButtons(),this.$el.parent().toggleClass("gt-open")},backToList:function(a){a.preventDefault(),this.$el.removeClass("gt-panel-editing")},resetButtons:function(){this.$el.find(".gt-item-confirm-delete").removeClass("gt-item-confirm-delete"),this.$el.find(".gt-reset-delete").removeClass("gt-reset-flyout")},closeDrawer:function(a){"undefined"!=typeof a&&a.preventDefault&&a.preventDefault(),this.$el.parent().removeClass("gt-open"),b.vent.trigger("controls:restore-shape"),b.vent.trigger("controls:deactivate","list")}})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.Controls=d.ItemView.extend({template:b.Templates.controls,className:"gt-control-group",events:{"click .gt-tool-list":"toggleList","click .gt-tool-create":"toggleNew","click .gt-tool-polygon":"polygon","click .gt-tool-radius":"radius"},initialize:function(){this.listenTo(b.vent,"controls:deactivate",this.hideControl),this.listenTo(b.vent,"controls:restore-shape",this.restoreShape),this.listenTo(b.vent,"controls:tools:disable-draw",this.disableDrawTool),this.listenTo(b.vent,"trigger:new",this.showNew),this.listenTo(b.vent,"controls:list:toggle",this.toggleList)},hideControl:function(a){this.$el.find(".gt-tool-"+a).removeClass("gt-active")},showControl:function(a){this.$el.find(".gt-tool-"+a).addClass("gt-active")},toggleControl:function(a){this.$el.find(".gt-tool-"+a).toggleClass("gt-active")},toggleList:function(a){"undefined"!=typeof a&&a.preventDefault&&a.preventDefault(),b.vent.trigger("drawer:new:close"),b.vent.trigger("drawer:list:toggle"),this.toggleControl("list"),this.restoreShape()},toggleNew:function(a){if("undefined"!=typeof a&&a.preventDefault&&a.preventDefault(),b.vent.trigger("drawer:close"),!b.newDrawerRegion.currentView||!b.newDrawerRegion.$el.hasClass("gt-open")){var c=new b.Views.New;b.newDrawerRegion.show(c)}b.vent.trigger("drawer:new:toggle"),b.vent.trigger("drawer:list:reset-buttons"),this.toggleControl("create"),this.restoreShape()},showNew:function(){var a=new b.Views.New({layer:b.Map.Draw.editLayer});b.newDrawerRegion.show(a),b.vent.trigger("drawer:close"),b.vent.trigger("drawer:new:open"),this.showControl("create"),b.vent.trigger("drawer:list:reset-buttons"),this.restoreShape()},polygon:function(a){a.preventDefault(),this.enableDrawTool("polygon")},radius:function(a){a.preventDefault(),this.enableDrawTool("radius")},enableDrawTool:function(a){this.disableDrawTool(),b.vent.trigger("map:draw:tool:enable",a),this.showControl(a),b.vent.trigger("drawer:list:reset-buttons")},disableDrawTool:function(a){a&&b.Map.Draw.disableTool(a),this.$el.find(".gt-draw-tools .gt-tool").removeClass("gt-active")},restoreShape:function(){b.Editor.Controller.drawerLayout.editRegion.currentView&&b.Editor.Controller.drawerLayout.editRegion.currentView.restoreShape()}})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.Edit=d.ItemView.extend({template:b.Templates.edit,className:"gt-edit",events:{"click .gt-submit":"parseForm"},onShow:function(){var a,c=this.options.item;if(c.shape.getLayers)a=c.shape.getLayers()[0];else{if(!c.shape.editing)throw new Error("Unknown Layer Error");a=c.shape}b.vent.trigger("trigger:edit",a)},restoreShape:function(){this.options.item.restoreShape()},parseForm:function(a){a.preventDefault();var c=this.$el.find("form").serializeObject();c&&(this.updateTrigger(c),b.vent.trigger("controls:list:toggle"))},updateTrigger:function(a){console.log(a);var c,d=b.Map.Draw.editLayer.getLayers()[0];if(d instanceof L.Circle){var e=d.getLatLng();c={latitude:e.lat,longitude:e.lng,distance:d.getRadius()}}else c={geojson:d.toGeoJSON()};var f={triggerId:this.model.get("triggerId"),condition:{direction:"enter",geo:c},action:{notification:{text:"Welcome to Portland"},callbackUrl:"http://pdx.gov/welcome"},setTags:["newtags"]};b.vent.trigger("trigger:update",f)}})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.ListItem=d.ItemView.extend({template:b.Templates.item,tagName:"li",className:"gt-result",events:{"click .gt-item-edit":"editItem","click .gt-item-delete":"confirmDelete","click .gt-reset-delete":"resetDelete","click .gt-item-confirm-delete":"destroyModel"},initialize:function(){this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"change",this.renderShape)},onShow:function(){this.renderShape()},renderShape:function(){this.shape&&(b.Map.Draw.clearShape(this.shape),this.shape=null);var a=this.model.get("triggerId"),c=this.model.get("condition").geo;this.shape=c.geojson?b.Map.Draw.polygon(c.geojson,a):b.Map.Draw.radius(c,a)},restoreShape:function(){b.map.hasLayer(this.shape)||(b.Map.Draw.clear(),this.renderShape())},editItem:function(a){a.preventDefault();var c=new b.Views.Edit({model:this.model,item:this});b.Editor.Controller.drawerLayout.editRegion.show(c),b.Editor.Controller.drawerLayout.$el.addClass("gt-panel-editing"),b.vent.trigger("drawer:list:reset-buttons")},confirmDelete:function(a){a.preventDefault(),this.$el.find(".gt-item-delete").addClass("gt-item-confirm-delete"),this.$el.find(".gt-reset-delete").addClass("gt-reset-flyout")},resetDelete:function(a){a.preventDefault(),this.$el.find(".gt-item-confirm-delete").removeClass("gt-item-confirm-delete"),this.$el.find(".gt-reset-delete").removeClass("gt-reset-flyout")},destroyModel:function(a){window.test=this.model,a.preventDefault(),b.Map.Draw.clearShape(this.shape),this.model.destroy()}}),a.Empty=d.ItemView.extend({template:b.Templates.empty,className:"gt-list-empty",events:{"click .gt-tool-create":"newTrigger"},newTrigger:function(a){a.preventDefault(),b.Editor.Controller.controlsView.toggleNew()}}),a.List=d.CompositeView.extend({template:b.Templates.list,className:"gt-list",itemView:a.ListItem,itemViewContainer:".gt-results",emptyView:a.Empty,initialize:function(){var a=this;this.collection.on("change reset add remove",function(){a.collection.length?a.$el.find(".gt-list-header").removeClass("gt-hide"):a.$el.find(".gt-list-header").addClass("gt-hide")})}})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.Main=d.ItemView.extend({id:"gt-regions",template:b.Templates.main})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.Map=d.ItemView.extend({id:"gt-map",render:function(){return this.isClosed=!1,this.triggerMethod("before:render",this),this.triggerMethod("item:before:render",this),this.triggerMethod("render",this),this.triggerMethod("item:rendered",this),this},onShow:function(){b.Map.start({el:this.el})}})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.New=d.ItemView.extend({template:b.Templates["new"],className:"gt-new gt-panel-wrap",events:{"click .gt-close-drawer":"closeDrawer","click .gt-submit":"parseForm"},initialize:function(a){"undefined"!=typeof a&&a.layer&&b.Map.zoomToLayer(a.layer),this.listenTo(b.vent,"drawer:new:open",this.openDrawer),this.listenTo(b.vent,"drawer:new:close",this.closeDrawer),this.listenTo(b.vent,"drawer:new:toggle",this.toggle)},openDrawer:function(){this.$el.parent().addClass("gt-open")},closeDrawer:function(a){"undefined"!=typeof a&&a.preventDefault&&a.preventDefault(),this.$el.parent().removeClass("gt-open"),b.vent.trigger("controls:deactivate","create"),b.vent.trigger("trigger:new:cancel")},toggle:function(){this.$el.parent().toggleClass("gt-open")},parseForm:function(a){a.preventDefault();var c=this.$el.find("form").serializeObject();c&&(this.createTrigger(c),b.vent.trigger("controls:list:toggle"))},createTrigger:function(a){console.log(a);var c,d=b.Map.Draw.editLayer.getLayers()[0];if(d instanceof L.Circle){var e=d.getLatLng();c={latitude:e.lat,longitude:e.lng,distance:d.getRadius()}}else c={geojson:d.toGeoJSON()};var f={condition:{direction:"enter",geo:c},action:{notification:{text:"Welcome to Portland"},callbackUrl:"http://pdx.gov/welcome"},setTags:["newtags"]};b.vent.trigger("trigger:create",f)}})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.Notification=d.ItemView.extend({template:b.Templates.notification,className:"gt-notification",tagName:"li",events:{"click .gt-close":"destroyNotification"},render:function(){d.ItemView.prototype.render.apply(this,arguments),this.$el.addClass(this.model.get("type"))},destroyNotification:function(){this.model.destroy()}}),a.NotificationList=d.CollectionView.extend({itemView:a.Notification,className:"gt-notification-list",tagName:"ul"})});