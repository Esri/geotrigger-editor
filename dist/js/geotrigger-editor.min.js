/*! geotrigger-editor 0.0.0 2013-09-13 */
!function(a){"use strict";for(var b,c,d={},e=function(){},f="memory".split(","),g="assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn".split(",");b=f.pop();)a[b]=a[b]||d;for(;c=g.pop();)a[c]=a[c]||e}(window.console=window.console||{}),function(a){a.registerHelper("select",function(a,b){var c=document.createElement("select");return c.innerHTML=b.fn(this),c.value=a,c.children[c.selectedIndex]&&c.children[c.selectedIndex].setAttribute("selected","selected"),c.innerHTML}),a.registerHelper("selectShape",function(a,b){var c=document.createElement("select");return c.innerHTML=b.fn(this),c.value=a.geo.geojson?"polygon":"radius",c.children[c.selectedIndex]&&c.children[c.selectedIndex].setAttribute("selected","selected"),c.innerHTML}),a.registerHelper("actionIcon",function(a){return"enter"===a?"gt-icon-enter":"leave"===a?"gt-icon-exit":void 0}),a.registerHelper("unlessDefaultTag",function(a,b){return 0!==a.indexOf("trigger:")?b.fn(this):b.inverse(this)}),a.registerHelper("tagList",function(a){if(a&&a.length){for(var b=[],c=0;c<a.length;c++)0!==a[c].indexOf("trigger:")&&b.push(a[c]);return b.join(", ")}return""}),a.registerHelper("tagLinks",function(a){if(a&&a.length){for(var b=[],c=0;c<a.length;c++)0!==a[c].indexOf("trigger:")&&b.push('<a href="#list?q='+encodeURIComponent(a[c]).replace(/%20/g,"+")+'">'+a[c]+"</a>");return b.join(", ")}return""})}(Handlebars,$),function(a){return a.fn.serializeObject=function(){var b,c,d,e=this;return b={},d={},c={validate:/^[a-zA-Z][a-zA-Z0-9_]*(?:\[(?:\d*|[a-zA-Z0-9_]+)\])*$/,key:/[a-zA-Z0-9_]+|(?=\[\])/g,push:/^$/,fixed:/^\d+$/,named:/^[a-zA-Z0-9_]+$/},this.build=function(a,b,c){return a[b]=c,a},this.push_counter=function(a){return void 0===d[a]&&(d[a]=0),d[a]++},a.each(a(this).serializeArray(),function(d,f){var g,h,i,j,k;if(c.validate.test(f.name)){for(h=f.name.match(c.key),i=f.value,k=f.name;void 0!==(g=h.pop());)c.push.test(g)?(j=new RegExp("\\["+g+"\\]$"),k=k.replace(j,""),i=e.build([],e.push_counter(k),i)):c.fixed.test(g)?i=e.build([],g,i):c.named.test(g)&&(i=e.build({},g,i));return b=a.extend(!0,b,i)}}),b}}(jQuery),L.Tooltip.prototype.updatePosition=function(a){var b=this._map.latLngToLayerPoint(a);return L.DomUtil.setPosition(this._container,b),this._container.style.display="inline-block",this},L.Polygon.prototype.getCenter=function(){for(var a,b,c,d=this._latlngs,e=d[0],f=0,g=0,h=0,i=d.length,j=0,k=i-1;i>j;k=j++)a=d[j],b=d[k],c=(a.lat-e.lat)*(b.lng-e.lng)-(b.lat-e.lat)*(a.lng-e.lng),f+=c,g+=(a.lat+b.lat-2*e.lat)*c,h+=(a.lng+b.lng-2*e.lng)*c;return c=3*f,new L.LatLng(g/c+e.lat,h/c+e.lng)},function(){_.mixin({deepExtend:underscoreDeepExtend(_)})}();var GeotriggerEditor=new Backbone.Marionette.Application;GeotriggerEditor.addInitializer(function(a){var b=a&&a.el?a.el:"#gt-editor",c=this.regions=new this.Layouts.Main;this.addRegions({mainRegion:b}),this.mainRegion.show(c)}),this.GeotriggerEditor=this.GeotriggerEditor||{},this.GeotriggerEditor.Templates=this.GeotriggerEditor.Templates||{},this.GeotriggerEditor.Templates.controls=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},'<div class="gt-drawer-controls">\n  <a href="#list" class="gt-tool gt-tool-list active gt-tooltip"><span>List</span></a>\n  <!-- <a href="#new" class="gt-tool gt-tool-create gt-tooltip"><span>Create</span></a> -->\n</div>\n<div class="gt-tool-controls">\n  <button class="gt-tool gt-tool-polygon gt-tooltip"><span>Polygon</span></button>\n  <button class="gt-tool gt-tool-radius gt-tooltip"><span>Radius</span></button>\n</div>'}),this.GeotriggerEditor.Templates.drawers=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},'<div class="gt-panel gt-panel-list"></div>\n<div class="gt-panel gt-panel-edit"></div>\n<div class="gt-panel gt-panel-new"></div>'}),this.GeotriggerEditor.Templates.edit=Handlebars.template(function(a,b,c,d,e){function f(){return"\n        <option value='enter'>enters</option>\n        <option value='leave'>leaves</option>\n        "}function g(){return"\n        <option value='polygon'>polygon</option>\n        <option value='radius'>circle</option>\n        "}function h(){return"\n        <option value='notification'>send the device a message</option>\n        <option value='callbackUrl'>post to a server</option>\n        <option value='trackingProfile'>change tracking profile</option>\n        "}function i(){return"\n          <option value='fine'>fine</option>\n          <option value='adaptive'>adaptive</option>\n          <option value='rough'>rough</option>\n          <option value='off'>off</option>\n          "}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{};var j,k,l,m="",n=c.helperMissing,o=this.escapeExpression,p=this,q="function";return m+="<div class='gt-panel-top-bar'>\n  <a href='#list' class='gt-panel-top-bar-button gt-back-to-list'></a>\n  <h3>Edit</h3>\n  <a href='#' class='gt-panel-top-bar-button gt-close-drawer'></a>\n</div>\n\n<div class='gt-panel-content'>\n  <form class='gt-form gt-form-edit'>\n    <section class='gt-form-section'>\n      <label for='tags'>\n        <span>When a device tagged</span>\n        <input type='text' name='tags' placeholder='enter tags' class='gt-tag-input' value='",l={hash:{},data:e},m+=o((j=c.tagList||b.tagList,j?j.call(b,b.tags,l):n.call(b,"tagList",b.tags,l)))+"'>\n      </label>\n\n      <select name='condition[direction]' class='gt-event'>\n        ",l={hash:{},inverse:p.noop,fn:p.program(1,f,e),data:e},j=c.select||b.select,k=j?j.call(b,(j=b.condition,null==j||j===!1?j:j.direction),l):n.call(b,"select",(j=b.condition,null==j||j===!1?j:j.direction),l),(k||0===k)&&(m+=k),m+="\n      </select>\n\n      <span>a</span>\n\n      <select name='geometry-type' class='gt-geometry-type'>\n        ",l={hash:{},inverse:p.noop,fn:p.program(3,g,e),data:e},j=c.selectShape||b.selectShape,k=j?j.call(b,b.condition,l):n.call(b,"selectShape",b.condition,l),(k||0===k)&&(m+=k),m+="\n      </select>\n\n      <span>, </span>\n\n      <select class='gt-action-selector'>\n        ",l={hash:{},inverse:p.noop,fn:p.program(5,h,e),data:e},j=c.select||b.select,k=j?j.call(b,b.action,l):n.call(b,"select",b.action,l),(k||0===k)&&(m+=k),m+="\n      </select>\n      <span>:</span>\n\n      <label class='gt-action gt-action-notification' for='message'>\n        <textarea class='gt-action-message-box' name='action[notification][text]' placeholder='message'>"+o((j=b.action,j=null==j||j===!1?j:j.notification,j=null==j||j===!1?j:j.text,typeof j===q?j.apply(b):j))+"</textarea>\n      </label>\n\n      <label class='gt-action gt-action-callbackUrl gt-hide' for='url'>\n        <input type='text' name='action[callbackUrl]' placeholder='url (optional)'>\n      </label>\n\n      <label class='gt-action gt-action-trackingProfile gt-hide' for='url'>\n        <span>to</span>\n        <select class='gt-action-profile-selector' name='action[trackingProfile]'>\n          ",l={hash:{},inverse:p.noop,fn:p.program(7,i,e),data:e},j=c.select||b.select,k=j?j.call(b,(j=b.action,null==j||j===!1?j:j.trackingProfile),l):n.call(b,"select",(j=b.action,null==j||j===!1?j:j.trackingProfile),l),(k||0===k)&&(m+=k),m+="\n        </select>\n      </label>\n\n      <label for='title'>\n        Nickname (optional):\n        <input type='text' name='properties[title]' placeholder='Title' class='gt-trigger-title-input' value='"+o((j=b.properties,j=null==j||j===!1?j:j.title,typeof j===q?j.apply(b):j))+"'>\n      </label>\n    </section>\n\n    <section class='gt-form-section'>\n      <button class='gt-button gt-button-blue gt-submit'>Update</button>\n      <ul class='gt-edit-controls'>\n        <li>\n          <a class='gt-reset-delete' href='#'>&#x2716;</a>\n        </li>\n        <li>\n          <button class='gt-item-delete gt-button-delete'></button>\n        </li>\n      </ul>\n    </section>\n  </form>\n</div>"}),this.GeotriggerEditor.Templates.empty=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},'<div class="gt-panel-top-bar">\n  <a href="#" class="gt-panel-top-bar-button gt-new-trigger"></a>\n  <h3>No Geotriggers</h3>\n  <a href="#" class="gt-panel-top-bar-button gt-close-drawer"></a>\n</div>\n\n<div class="gt-panel-no-triggers">\n  <h5>This application doesn\'t have any Geotriggers yet.</h5>\n   <a href="#new" class="gt-tool gt-tool-create gt-button gt-button-green">Create A New Trigger</a>\n</div>\n\n<ul class="gt-tool-descriptions">\n  <li class="gt-tool-description">\n    <span class="gt-icon gt-icon-create"></span>\n    <h5><a class="gt-tool gt-tool-create"href="#">New Geotrigger Tool</a></h5>\n    <p>Create a new Geotrigger by first entering it\'s information, than defining an area on the map.</p>\n  </li>\n\n  <li class="gt-tool-description">\n    <span class="gt-icon gt-icon-polygon"></span>\n    <h5><a class="gt-tool gt-tool-polygon"href="#">Polygon Tool</a></h5>\n    <p>Click to start drawing on the map, creating each point of a polygon. Click on the first point to close the shape and enter the Geotrigger information.</p>\n  </li>\n\n  <li class="gt-tool-description">\n    <span class="gt-icon gt-icon-radius"></span>\n    <h5><a class="gt-tool gt-tool-radius"href="#">Radius Tool</a></h5>\n    <p>Select a point on the map, than hold and drag to define a radius around that point. You can edit this radius later, if you want.</p>\n  </li>\n\n  <!-- <li class="gt-tool-description">\n    <span class="gt-icon gt-icon-drivetime"></span>\n    <h5><a class="gt-tool gt-tool-drivetime"href="#">Drivetime Tool</a></h5>\n    <p>Drop a marker on the map, and then enter your desired drive time from that marker. We\'ll compute that polygon for you.</p>\n  </li> -->\n</ul>\n\n'}),this.GeotriggerEditor.Templates.item=Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e="";return e+="\n    <span>",(d=c.triggerId)?d=d.call(a,{hash:{},data:b}):(d=a.triggerId,d=typeof d===l?d.apply(a):d),e+=m(d)+"</span>\n    "}function g(a){var b,c="";return c+="\n    <span>"+m((b=a.properties,b=null==b||b===!1?b:b.title,typeof b===l?b.apply(a):b))+"</span>\n    "}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{};var h,i,j,k="",l="function",m=this.escapeExpression,n=c.helperMissing,o=this;return k+="<span class='gt-item-edit gt-icon ",j={hash:{},data:e},k+=m((h=c.actionIcon||b.actionIcon,h?h.call(b,(h=b.condition,null==h||h===!1?h:h.direction),j):n.call(b,"actionIcon",(h=b.condition,null==h||h===!1?h:h.direction),j)))+" gt-icon-polygon'></span>\n<h5>\n  <a class='gt-item-edit' href='#",(i=c.triggerId)?i=i.call(b,{hash:{},data:e}):(i=b.triggerId,i=typeof i===l?i.apply(b):i),k+=m(i)+"/edit'>\n    ",i=c.unless.call(b,(h=b.properties,null==h||h===!1?h:h.title),{hash:{},inverse:o.program(3,g,e),fn:o.program(1,f,e),data:e}),(i||0===i)&&(k+=i),k+="\n  </a>\n</h5>\n<div class='gt-tags'>\n  Tags: ",j={hash:{},data:e},h=c.tagLinks||b.tagLinks,i=h?h.call(b,b.tags,j):n.call(b,"tagLinks",b.tags,j),(i||0===i)&&(k+=i),k+="\n</div>\n<ul class='gt-item-controls'>\n  <li><a class='gt-reset-delete' href='#'>&#x2716;</a></li>\n  <li><button class='gt-item-delete gt-button-small gt-button-delete'></button></li>\n</ul>"}),this.GeotriggerEditor.Templates.list=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},"<div class='gt-list-header gt-hide'>\n  <div class='gt-panel-top-bar'>\n    <a href='#new' class='gt-button gt-button-blue gt-tool-create'>Create</a>\n    <h3 class='gt-panel-top-bar-left'>List</h3>\n    <a href='#' class='gt-panel-top-bar-button gt-close-drawer'></a>\n  </div>\n  </div>\n  <div class='gt-search'>\n    <input type='search'></input>\n  </div>\n<ul class='gt-results'></ul>"}),this.GeotriggerEditor.Templates.main=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},"<div id='gt-controls-region'></div>\n<div id='gt-content'>\n  <div id='gt-drawer-region'></div>\n  <div id='gt-map-region'></div>\n  <div id='gt-notes-region'></div>\n</div>\n"}),this.GeotriggerEditor.Templates["new"]=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},"<div class='gt-panel-top-bar'>\n  <a href='#list' class='gt-panel-top-bar-button gt-back-to-list'></a>\n  <h3>Create</h3>\n  <a href='#' class='gt-panel-top-bar-button gt-close-drawer'></a>\n</div>\n\n<div class='gt-panel-content'>\n  <form class='gt-form gt-form-new'>\n    <section class='gt-form-section'>\n      <label for='tags'>\n        <span>When a device tagged</span>\n        <input type='text' name='setTags' placeholder='tag 1, tag 2..' class='gt-tag-input'>\n      </label>\n\n      <select name='condition[direction]' class='gt-event'>\n        <option value='enter' selected>enters</option>\n        <option value='leave'>leaves</option>\n      </select>\n\n      <span>a</span>\n\n      <select name='geometry-type' class='gt-geometry-type'>\n        <option value='polygon' selected>polygon</option>\n        <option value='radius'>circle</option>\n      </select>\n\n      <span>, </span>\n\n      <!-- <input type='text' name='radius' class='gt-radius'> -->\n\n      <!-- <button class='gt-button gt-button-clear gt-add-action'>add an action</button> -->\n\n      <select class='gt-action-selector'>\n        <option value='notification' selected>send the device a message</option>\n        <option value='callbackUrl'>post to a server</option>\n        <option value='trackingProfile'>change tracking profile</option>\n      </select>\n      <span>:</span>\n\n      <label class='gt-action gt-action-notification' for='message'>\n        <textarea class='gt-action-message-box' name='action[notification][text]' placeholder='message'></textarea>\n      </label>\n\n      <label class='gt-action gt-action-callbackUrl gt-hide' for='url'>\n        <input type='text' name='action[callbackUrl]' placeholder='url (optional)'>\n      </label>\n\n      <label class='gt-action gt-action-trackingProfile gt-hide' for='url'>\n        <span>to</span>\n        <select class='gt-action-profile-selector' name='action[trackingProfile]'>\n          <option disabled='disabled' selected>choose a tracking profile</option>\n          <option value='fine'>fine</option>\n          <option value='adaptive'>adaptive</option>\n          <option value='rough'>rough</option>\n          <option value='off'>off</option>\n        </select>\n      </label>\n\n      <!--\n      <label for='date'>\n        This will start\n        <select class='gt-date-start'>\n          <option value='now'>now</option>\n          <option value='future'>in the future</option>\n        </select>\n        and persist\n        <select class='gt-date-end'>\n          <option value='never'>indefinitely</option>\n          <option value='future'>until a future date</option>\n        </select>\n      </label>\n      -->\n\n      <label for='title'>\n        Nickname (optional):\n        <input type='text' name='properties[title]' placeholder='Title' class='gt-trigger-title-input'>\n      </label>\n    </section>\n\n    <section class='gt-form-section'>\n      <button class='gt-button gt-button-blue gt-submit'>Submit</button>\n      <!-- <ul class='gt-edit-controls'>\n        <li>\n          <input type='reset' class='gt-item-clear gt-button-clear' value='Reset'>\n        </li>\n      </ul> -->\n    </section>\n  </form>\n</div>"}),this.GeotriggerEditor.Templates.notification=Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{};var f,g="",h="function",i=this.escapeExpression;return g+="<button class='gt-close'>&times;</button> ",(f=c.message)?f=f.call(b,{hash:{},data:e}):(f=b.message,f=typeof f===h?f.apply(b):f),g+=i(f)}),GeotriggerEditor.module("API",function(a){a.addInitializer(function(a){try{if(!(a&&a.credentials&&a.credentials.clientId&&a.credentials.clientSecret))throw new Error("GeotriggerEditor requires a `credentials` object with `clientId` and `clientSecret` properties");this.session=new Geotriggers.Session({clientId:a.credentials.clientId,clientSecret:a.credentials.clientSecret,persistSession:!1})}catch(b){console.error(b.name+": "+b.message)}})}),GeotriggerEditor.module("Config",function(a,b,c,d,e,f){var g={showArea:!1,shapeOptions:{stroke:!0,color:"#00b1dc",weight:2,opacity:.8,fill:!0,fillColor:null,fillOpacity:.2,clickable:!0}},h={showArea:!1,shapeOptions:{color:"#00dcb1",opacity:.8,dashArray:"10, 10",weight:2,fill:!0,fillOpacity:.2}},i={showArea:!1,shapeOptions:{color:"#00dcb1",opacity:.8,stroke:!0,weight:2,fill:!0,fillOpacity:.2}},j={map:{basemap:"Streets",center:[45.516484,-122.676339],zoom:12},fitOnLoad:!0,imagePath:"/images",sharedOptions:g,editOptions:h,highlightOptions:i};a.addInitializer(function(a){b.config=f.deepExtend(j,a)})}),GeotriggerEditor.module("util",function(a){a.removeEmptyStrings=function(b){for(var c in b){if(""===b[c]&&delete b[c],b[c]instanceof Array){for(var d=!0,e=0;e<b[c].length;e++)if(""!==b[c][e]){d=!1;break}d&&delete b[c]}if("object"==typeof b[c]){b[c]=a.removeEmptyStrings(b[c]);var f=!1;for(var g in b[c]){f=!0;break}f||delete b[c]}}return b}}),GeotriggerEditor.module("Map.Draw",function(a,b,c,d,e,f){this.startWithParent=!1,f.extend(a,{_tools:{polygon:null,radius:null},_setup:function(){this._tools.polygon=new L.Draw.Polygon(b.map,b.config.editOptions),this._tools.radius=new L.Draw.Circle(b.map,b.config.editOptions),this._eventBindings()},_eventBindings:function(){b.vent.on("draw:new",function(a){this.editLayer(a)},this),b.vent.on("index trigger:list trigger:edit",function(){this.clear()},this),b.vent.on("trigger:new:ready",function(){var a=b.request("draw:layer");a&&b.Map.panToLayer(a)},this),b.vent.on("trigger:edit",function(a){var c=this.newShape(a);this.editLayer(c),b.Map.panToLayer(c)},this),b.map.on("draw:created",function(a){a.layerType;var c=a.layer;b.vent.trigger("draw:new",c)}),b.reqres.setHandler("draw:layer",f.bind(function(){return b.Map.Layers.edit.getLayers()[0]},this)),b.commands.setHandler("draw:clear",f.bind(function(){this.clear()},this)),b.vent.on("draw:enable",f.bind(function(a){this.enableTool(a)},this)),b.vent.on("draw:disable",f.bind(function(a){this.disableTool(a)},this))},newShape:function(a){var c=b.collections.triggers.get(a);c.get("triggerId");var d,e=c.get("condition").geo;return d=e.geojson?b.Map.polygon(e.geojson,b.config.editOptions.shapeOptions,!1).getLayers()[0]:b.Map.circle(e,b.config.editOptions.shapeOptions,!1)},editLayer:function(a){this.clear(),a.editing.enable(),b.Map.Layers.edit.addLayer(a)},clear:function(){b.Map.Layers.edit.clearLayers()},enableTool:function(a){this.disableTool(),this._tools[a].enable()},disableTool:function(a){for(var b in this._tools)("undefined"==typeof a||b===a)&&this._tools[b].disable()}}),a.addInitializer(function(){this._setup()})}),GeotriggerEditor.module("Editor",function(a,b,c,d,e,f){var g=d.AppRouter.extend({appRoutes:{"":"index",list:"list","list?q=:term":"list","new":"new",":id/edit":"edit","*notfound":"notFound"}}),h=function(){b.collections=b.collections||{},b.collections.triggers=new b.Collections.Triggers,b.collections.notifications=new b.Collections.Notifications};f.extend(h.prototype,{start:function(){this.setup(),b.vent.trigger("notify","Triggers loading"),b.collections.triggers.fetch({reset:!0,success:function(){b.vent.trigger("notify:clear"),c.history.start(),b.config.fitOnLoad&&b.execute("map:fit")}}),b.vent.on("draw:new",function(){"new"===c.history.fragment||c.history.fragment.match("edit")||b.router.navigate("new",{trigger:!0})},this),b.vent.on("trigger:create",this.createTrigger,this),b.vent.on("trigger:update",this.updateTrigger,this),b.vent.on("trigger:destroy",this.deleteTrigger,this)},setup:function(){this.setupMap(),this.setupDrawer(),this.setupControls(),this.setupNotifications()},setupMap:function(){var a=new b.Views.Map({collection:b.collections.triggers});b.regions.map.show(a)},setupDrawer:function(){var a=b.regions.drawer,c=b.mainRegion.$el.find("#gt-content");a.on("show",function(){c.addClass("gt-active")}),a.on("close",function(){c.removeClass("gt-active")})},setupControls:function(){var a=new b.Views.Controls;b.regions.controls.show(a)},setupNotifications:function(){var a=new b.Views.NotificationList({collection:b.collections.notifications});b.regions.notes.show(a),b.vent.on("notify",function(a){"string"==typeof a&&(a={type:"info",message:a});var c=new b.Models.Notification(a);b.collections.notifications.add(c)},this)},index:function(){b.vent.trigger("index"),b.regions.drawer.close()},list:function(a){if(!b.regions.drawer.$el||!b.regions.drawer.$el.has(".gt-list").length){b.vent.trigger("trigger:list");var c=new b.Views.List({collection:b.collections.triggers});b.regions.drawer.show(c)}a&&(a=decodeURIComponent(a.replace(/\+/g,"%20")),b.vent.trigger("trigger:list:search",a))},"new":function(){b.vent.trigger("trigger:new");var a=new b.Views.New;b.regions.drawer.show(a),b.vent.trigger("trigger:new:ready")},edit:function(a){var c=this.getTrigger(a);if(c){var d=new b.Views.Edit({model:c});b.regions.drawer.show(d),b.vent.trigger("trigger:edit",a)}else this.notFound()},notFound:function(){b.vent.trigger("notify",{type:"error",message:"404: Not Found"})},createTrigger:function(a){b.collections.triggers.once("add",function(){b.router.navigate("list",{trigger:!0})}),b.collections.triggers.create(a,{wait:!0})},getTrigger:function(a){var c=b.collections.triggers.get(a);return c},updateTrigger:function(a){b.collections.triggers.once("change",function(){b.router.navigate("list",{trigger:!0})});var c=b.collections.triggers.get(a.triggerId);c.set(a),c.save()},deleteTrigger:function(a){b.collections.triggers.once("remove",function(){c.history.fragment.match("edit")&&b.router.navigate("list",{trigger:!0})}),a.destroy()}}),a.addInitializer(function(){var a=new h;b.router=new g({controller:a}),a.start()})}),GeotriggerEditor.module("Map.Layers",function(a,b,c,d,e,f){this.startWithParent=!1,f.extend(a,{_setup:function(){this.main=new L.FeatureGroup,b.map.addLayer(this.main),this.edit=new L.FeatureGroup,b.map.addLayer(this.edit)}}),a.addInitializer(function(){this._setup()})}),GeotriggerEditor.module("Map",function(a,b,c,d,e,f){this.startWithParent=!1,f.extend(a,{_setup:function(a){b.map=this.map=L.map(a.el).setView(b.config.map.center,b.config.map.zoom),this.map.zoomControl.setPosition("topright"),L.esri.basemapLayer(b.config.map.basemap).addTo(b.map),this.Layers.start(),this._eventBindings()},_eventBindings:function(){b.commands.setHandler("map:fit",f.bind(function(){var a=this.Layers.main.getBounds(),b=this.getDrawerWidth();this.map.fitBounds(a,{animate:!1,paddingTopLeft:[b,0]})},this))},getDrawerWidth:function(){var a=b.mainRegion.$el.find("#gt-content"),c=a.find("#gt-drawer-region");return a.hasClass("gt-active")?c.width():0},panToLayer:function(a){var b;a.getLatLng?b=a.getLatLng():a.getCenter&&(b=a.getCenter());var c=this.getDrawerWidth();if(c){var d=this.map.project(b);d.x=d.x-c/2,b=this.map.unproject(d)}b&&this.map.panTo(b,{animate:!0})},removeShape:function(a){this.map.removeLayer(a)},focusShape:function(a){a.setStyle(b.config.highlightOptions.shapeOptions)},unfocusShape:function(a){a.setStyle(b.config.sharedOptions.shapeOptions)},polygon:function(a,c,d){c=c||b.config.sharedOptions.shapeOptions;var e=new L.GeoJSON(a,{style:function(){return c}});return d!==!1&&this.Layers.main.addLayer(e),e},circle:function(a,c,d){c=c||b.config.sharedOptions.shapeOptions;var e=L.circle([a.latitude,a.longitude],a.distance,c);return d!==!1&&this.Layers.main.addLayer(e),e}}),a.addInitializer(function(a){this._setup(a),this.Draw.start()})}),GeotriggerEditor.module("Models",function(a,b,c){a.Notification=c.Model.extend({defaults:{type:"info",message:"everything's fine"}})}),GeotriggerEditor.module("Models",function(a,b,c,d,e,f){a.Trigger=c.Model.extend({idAttribute:"triggerId",sync:function(a,c,d){console.log("sync:"+a);var e=this.get("triggerId"),g=f.bind(function(c,e){if(c){var f="Error creating trigger",g=JSON.stringify(c).match("Coordinate values are out of range");g&&(f="Coordinate values are out of range");var h=JSON.stringify(c).match("Error performing intersection");h&&(f="Polygons can't intersect themselves"),b.vent.trigger("notify",{type:"error",message:f}),d&&d.error&&d.error("Record Not Found")}else"read"!==a&&b.vent.trigger("notify",{message:"Trigger "+a+"d successfully",timeout:3500}),d&&d.success&&d.success(e)},this);switch(a){case"read":b.API.session.request("trigger/list",{triggerIds:[e]},g);break;case"create":b.API.session.request("trigger/create",c.toJSON(),g);break;case"update":var h={properties:this.get("properties"),triggerIds:e,condition:this.get("condition"),action:this.get("action"),setTags:this.get("tags")};b.API.session.request("trigger/update",h,g);break;case"delete":b.API.session.request("trigger/delete",{triggerIds:e},g)}}})}),GeotriggerEditor.module("Collections",function(a,b,c){a.Notifications=c.Collection.extend({model:b.Models.Notification})}),GeotriggerEditor.module("Collections",function(a,b,c,d,e,f){a.Triggers=c.Collection.extend({model:b.Models.Trigger,fetch:function(a){var c=f.bind(function(b,c){a.reset?this.reset(this.parse(c)):this.set(this.parse(c)),a.success&&a.success(this,this.parse(c),a)},this);b.API.session.request("trigger/list",c)},parse:function(a){return a.triggers}})}),GeotriggerEditor.module("Layouts",function(a,b,c){a.Drawers=c.Marionette.Layout.extend({template:b.Templates.drawers,className:"gt-panel-wrap",events:{},regions:{list:".gt-panel-list",edit:".gt-panel-edit",create:".gt-panel-new"},initialize:function(){this.listenTo(b.vent,"trigger:list",this.showList),this.listenTo(b.vent,"trigger:edit",this.showEdit),this.listenTo(b.vent,"trigger:new",this.showNew)},showList:function(){var a=new b.Views.List({collection:b.collections.triggers});this.list.show(a)},showEdit:function(a){var c=b.collections.triggers.get(a),d=new b.Views.Edit({model:c});this.edit.show(d)},showNew:function(){var a=new b.Views.New;this.create.show(a)}})}),GeotriggerEditor.module("Layouts",function(a,b,c){a.Main=c.Marionette.Layout.extend({template:b.Templates.main,id:"gt-regions",regions:{controls:"#gt-controls-region",drawer:"#gt-drawer-region",map:"#gt-map-region",notes:"#gt-notes-region"}})}),GeotriggerEditor.module("Views",function(a,b,c,d){a.Controls=d.ItemView.extend({template:b.Templates.controls,className:"gt-control-group",events:{"click .gt-tool-list":"toggleList","click .gt-tool-create":"toggleNew","click .gt-tool-polygon":"togglePolygon","click .gt-tool-radius":"toggleRadius"},ui:{drawers:".gt-drawer-controls",tools:".gt-tool-controls",list:".gt-drawer-controls .gt-tool-list",create:".gt-drawer-controls .gt-tool-create",polygon:".gt-tool-controls .gt-tool-polygon",radius:".gt-tool-controls .gt-tool-radius",all:".gt-tool"},onRender:function(){this.listenTo(b.router,"route",this.handleStateChange),this.listenTo(b.vent,"draw:new",this.disableTool),this.listenTo(b.vent,"draw:enable",function(a){this.activate(a)}),this.listenTo(b.vent,"draw:disable",function(){this.ui.tools.find(".gt-tool").removeClass("gt-active")})},handleStateChange:function(a){switch(this.clear("drawers"),a){case"new":this.activate("list");break;case"edit":this.activate("list");break;case"list":this.activate("list")}},toggleList:function(a){this.ui.list.hasClass("gt-active")&&(a.preventDefault(),b.router.navigate("",{trigger:!0}))},toggleNew:function(a){this.ui.create.hasClass("gt-active")&&(a.preventDefault(),b.router.navigate("",{trigger:!0}))},togglePolygon:function(){this.ui.polygon.hasClass("gt-active")?this.disableTool("polygon"):this.enableTool("polygon")},toggleRadius:function(){this.ui.radius.hasClass("gt-active")?this.disableTool("radius"):this.enableTool("radius")},enableTool:function(a){this.disableTool(),b.vent.trigger("draw:enable",a)},disableTool:function(a){b.vent.trigger("draw:disable",a)},activate:function(a){this.ui[a].addClass("gt-active")},toggle:function(a){"list"===a?(this.ui.list.toggleClass("gt-active"),this.ui.create.removeClass("gt-active")):"create"===a&&(this.ui.create.toggleClass("gt-active"),this.ui.list.removeClass("gt-active"))},clear:function(a){"drawers"===a?this.ui.drawers.find(".gt-tool").removeClass("gt-active"):"tools"===a?this.ui.tools.find(".gt-tool").removeClass("gt-active"):this.ui.all.removeClass("gt-active")}})}),GeotriggerEditor.module("Views",function(a,b,c,d,e){a.Edit=d.ItemView.extend({template:b.Templates.edit,className:"gt-edit gt-panel",events:{"change .gt-geometry-type":"startDrawing","change .gt-action-selector":"toggleActions","click .gt-submit":"parseForm","click .gt-item-delete":"confirmDelete","click .gt-reset-delete":"resetDelete","click .gt-item-confirm-delete":"destroyModel"},ui:{actions:".gt-action",form:"form",deleteItem:".gt-item-delete",confirm:".gt-item-confirm-delete",reset:".gt-reset-delete"},onShow:function(){this.listenTo(b.vent,"draw:new",this.parseShape)},startDrawing:function(a){var c=e(a.target).val();b.vent.trigger("draw:enable",c)},toggleActions:function(a){var b=e(a.target).val();this.ui.actions.hide(),this.$el.find(".gt-action-"+b).show()},parseShape:function(){var a=b.request("draw:layer");window.layer=a;var c=this.ui.form.find('[name="condition[direction]"]'),d=this.ui.form.find('[name="geometry-type"]');switch(!0){case a instanceof L.Polygon:null===c.val()&&c.val("enter"),d.val("polygon");break;case a instanceof L.Circle:null===c.val()&&c.val("enter"),d.val("radius")}},parseForm:function(a){a.preventDefault();var c=this.ui.form.serializeObject();if(c=b.util.removeEmptyStrings(c),c.tags){var d=c.tags;d=d.split(",");for(var e=d.length-1;e>0;e--)d[e]=d[e].trim();c.tags=d}c&&this.updateTrigger(c)},updateTrigger:function(a){var c=b.request("draw:layer");if(c instanceof L.Circle){var d=c.getLatLng();a.condition.geo={latitude:d.lat,longitude:d.lng,distance:c.getRadius()}}else a.condition.geo={geojson:c.toGeoJSON()};a.triggerId=this.model.get("triggerId"),b.vent.trigger("trigger:update",a)},confirmDelete:function(a){a.preventDefault(),this.ui.deleteItem.addClass("gt-item-confirm-delete"),this.ui.reset.addClass("gt-reset-flyout-right")},resetDelete:function(a){a.preventDefault(),this.ui.deleteItem.removeClass("gt-item-confirm-delete"),this.ui.reset.removeClass("gt-reset-flyout-right")},destroyModel:function(a){a.preventDefault(),b.vent.trigger("trigger:destroy",this.model)}})}),GeotriggerEditor.module("Views",function(a,b,c,d,e){a.ListItem=d.ItemView.extend({template:b.Templates.item,tagName:"li",className:"gt-result",events:{click:"editItem","click .gt-tags":"tagsClick","click .gt-item-delete":"confirmDelete","click .gt-reset-delete":"resetDelete","click .gt-item-confirm-delete":"destroyModel",mouseover:"focusShape",mouseout:"unfocusShape"},ui:{deleteItem:".gt-item-delete",confirm:".gt-item-confirm-delete",reset:".gt-reset-delete"},modelEvents:{change:"modelChanged"},modelChanged:function(){this.render()},editItem:function(){var a=this.model.get("triggerId");b.router.navigate(a+"/edit",{trigger:!0})},tagsClick:function(a){a.stopPropagation()},confirmDelete:function(a){a.preventDefault(),a.stopPropagation(),this.ui.deleteItem.addClass("gt-item-confirm-delete"),this.ui.reset.addClass("gt-reset-flyout")},resetDelete:function(a){a.preventDefault(),a.stopPropagation(),this.ui.deleteItem.removeClass("gt-item-confirm-delete"),this.ui.reset.removeClass("gt-reset-flyout")},destroyModel:function(a){a.preventDefault(),a.stopPropagation(),b.vent.trigger("trigger:destroy",this.model)},focusShape:function(){var a=this.model.get("triggerId");b.vent.trigger("trigger:focus",a)},unfocusShape:function(){var a=this.model.get("triggerId");b.vent.trigger("trigger:unfocus",a)}}),a.Empty=d.ItemView.extend({template:b.Templates.empty,className:"gt-list-empty"}),a.List=d.CompositeView.extend({template:b.Templates.list,className:"gt-list gt-panel",itemView:a.ListItem,itemViewContainer:".gt-results",emptyView:a.Empty,events:{"keyup .gt-search":"filter"},ui:{header:".gt-list-header",search:".gt-search input",results:".gt-results"},onShow:function(){this.headerCheck(),this.listenTo(this.collection,"change reset add remove",this.headerCheck),this.listenTo(b.vent,"trigger:list:search",this.search)
},headerCheck:function(){this.collection.length?this.ui.header.removeClass("gt-hide"):this.ui.header.addClass("gt-hide")},search:function(a){this.ui.search.val(a),this.filter()},filter:function(a){var d=this.ui.search.val();if(d.length)if("undefined"!=typeof a&&13===a.keyCode)b.router.navigate("list?q="+encodeURIComponent(d).replace(/%20/g,"+"),{trigger:!0});else{this.ui.results.addClass("gt-filtering");var f=this.ui.results.find(".gt-result"),g=this.ui.search.val().split(/\s+/),h="(?=.*"+g.join(")(?=.*")+")",i=new RegExp(h,"i");f.each(function(){var a=e(this),b=a.find(".gt-tags a"),c="";c+=a.find(".gt-item-edit span").text(),b.each(function(){c+=e(this).text()}),i.exec(c)?a.addClass("gt-list-visible"):a.removeClass("gt-list-visible")})}else this.ui.results.removeClass("gt-filtering"),"list"!==c.history.fragment&&b.router.navigate("list",{trigger:!1})}})}),GeotriggerEditor.module("Views",function(a,b,c,d,e,f){a.Shape=d.View.extend({modelEvents:{change:"render"},render:function(){return this.isClosed=!1,this.triggerMethod("before:render",this),this.triggerMethod("item:before:render",this),this.renderShape(),this.triggerMethod("render",this),this.triggerMethod("item:rendered",this),this},renderShape:function(){this.model.get("triggerId");var a=this.model.get("condition").geo;this.removeShape(),this._shape=a.geojson?b.Map.polygon(a.geojson):b.Map.circle(a),this._shape.on("click",f.bind(function(){b.router.navigate(this.model.id+"/edit",{trigger:!0})},this)),this._shape.on("mouseover",f.bind(function(){b.Map.focusShape(this._shape)},this)),this._shape.on("mouseout",f.bind(function(){b.Map.unfocusShape(this._shape)},this))},removeShape:function(){this._shape&&(b.Map.removeShape(this._shape),delete this._shape)},focusShape:function(){this._shape&&b.Map.focusShape(this._shape)},unfocusShape:function(){this._shape&&b.Map.unfocusShape(this._shape)},onClose:function(){this.removeShape()}}),a.Map=d.CollectionView.extend({id:"gt-map",itemView:a.Shape,onShow:function(){b.Map.start({el:this.el}),this.listenTo(b.vent,"trigger:edit",this.hideShape),this.listenTo(b.vent,"index trigger:new trigger:list trigger:edit",this.restore),this.listenTo(b.vent,"trigger:focus",this.focusShape),this.listenTo(b.vent,"trigger:unfocus",this.unfocusShape)},hideShape:function(a){var c=b.collections.triggers.get(a),d=this.children.findByModel(c);d.removeShape()},focusShape:function(a){var c=b.collections.triggers.get(a),d=this.children.findByModel(c);d.focusShape()},unfocusShape:function(a){var c=b.collections.triggers.get(a),d=this.children.findByModel(c);d.unfocusShape()},restore:function(a){this.children.each(function(b){if(!b._shape){var c=b.model.get("triggerId");a&&c===a||b.render()}})}})}),GeotriggerEditor.module("Views",function(a,b,c,d,e){a.New=d.ItemView.extend({template:b.Templates["new"],className:"gt-new gt-panel",events:{"change .gt-geometry-type":"startDrawing","change .gt-action-selector":"toggleActions","click .gt-submit":"parseForm"},ui:{actions:".gt-action",form:"form"},onShow:function(){this.parseShape(),this.listenTo(b.vent,"draw:new",this.parseShape)},startDrawing:function(a){var c=e(a.target).val();b.vent.trigger("draw:enable",c)},toggleActions:function(a){var b=e(a.target).val();this.ui.actions.hide(),this.$el.find(".gt-action-"+b).show()},parseShape:function(){var a=b.request("draw:layer");window.layer=a;var c=this.ui.form.find('[name="condition[direction]"]'),d=this.ui.form.find('[name="geometry-type"]');switch(!0){case a instanceof L.Polygon:null===c.val()&&c.val("enter"),d.val("polygon");break;case a instanceof L.Circle:null===c.val()&&c.val("enter"),d.val("radius")}},parseForm:function(a){a.preventDefault();var c=this.ui.form.serializeObject();if(c=b.util.removeEmptyStrings(c),c.tags){var d=c.tags;d=d.split(",");for(var e=d.length-1;e>0;e--)d[e]=d[e].trim();c.tags=d}c&&this.createTrigger(c)},createTrigger:function(a){var c=b.request("draw:layer");if(c instanceof L.Circle){var d=c.getLatLng();a.condition.geo={latitude:d.lat,longitude:d.lng,distance:c.getRadius()}}else a.condition.geo={geojson:c.toGeoJSON()};b.vent.trigger("trigger:create",a)}})}),GeotriggerEditor.module("Views",function(a,b,c,d,e,f){a.Notification=d.ItemView.extend({template:b.Templates.notification,className:"gt-notification",tagName:"li",events:{"click .gt-close":"destroyNotification"},render:function(){d.ItemView.prototype.render.apply(this,arguments);var a=this.model.get("type")||"info";this.$el.addClass(a),this.listenTo(b.vent,"notify:clear",this.destroyNotification)},onShow:function(){this.$el.fadeIn();var a=this.model.get("timeout");"number"==typeof a&&setTimeout(f.bind(function(){this.destroyNotification()},this),a)},destroyNotification:function(){this.$el.fadeOut(f.bind(function(){this.model.destroy()},this))}}),a.NotificationList=d.CollectionView.extend({itemView:a.Notification,className:"gt-notification-list",tagName:"ul"})});